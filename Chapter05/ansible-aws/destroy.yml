---

- name: Delete all of the AWS resources
  hosts: localhost
  connection: local
  gather_facts: true

  vars_files:
    - group_vars/aws.yml
    - group_vars/common.yml

  tasks:

    - name: Get information about the web Auto Scaling Group
      amazon.aws.autoscaling_group_info:
        name: "{{ asg_name }}"
        region: "{{ region }}"
      register: asgs

    - name: Delete the web Auto Scaling Group
      amazon.aws.autoscaling_group:
        name: "{{ asg_name }}"
        region: "{{ region }}"
        min_size: "{{ ec2.asg.min_size }}"
        max_size: "{{ ec2.asg.max_size }}"
        desired_capacity: "{{ ec2.asg.desired_capacity }}"
        suspend_processes: "Terminate"
        state: absent
      when: asgs.results | length > 0

    - name: Delete the launch config
      community.aws.autoscaling_launch_config:
        name: "{{ lauch_configuration_name }}"
        region: "{{ region }}"
        state: absent

    - name: Get information about the admin EC2 instance
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        filters:
          tag:Name: "{{ ec2_instance_name_admin }}"
      register: admin_ec2_instance

    - name: Delete the admin EC2 instance
      amazon.aws.ec2_instance:
        filters:
          tag:Name: "{{ ec2_instance_name_admin }}"
        region: "{{ region }}"
        state: absent
      when: admin_ec2_instance.instances | length > 0

    - name: Get information about the RDS instance
      community.aws.rds_instance_info:
        region: "{{ region }}"
        filters:
          db-instance-id: "{{ rds_db_instance_name }}" 
      register: rds_instance_info
  
    - name: Delete the RDS instance
      amazon.aws.rds_instance:
        db_instance_identifier: "{{ rds_instance_info.instances[0].db_instance_identifier }}"
        region: "{{ region }}"
        skip_final_snapshot: true
        state: absent
      when: rds_instance_info.instances | length > 0

    - name: Delete the RDS subnet group
      amazon.aws.rds_subnet_group:
        name: "{{ rds_instance_info.instances[0].db_subnet_group.db_subnet_group_name }}"
        region: "{{ region }}"
        state: absent
      when: rds_instance_info.instances | length > 0

    - name: Delete the EFS resource
      community.aws.efs:
        name: "{{ efs_name }}"
        region: "{{ region }}"
        state: absent


    - name: Delete the application load balancer
      amazon.aws.elb_application_lb:
        name: "{{ alb_name }}"
        region: "{{ region }}"
        state: absent

    - name: Delete the ELB target group
      community.aws.elb_target_group:
        name: "{{ alb_target_group_name }}"
        region: "{{ region }}"
        state: absent

    - name: Delete the security groups
      amazon.aws.ec2_security_group:
        name: "{{ item }}"
        region: "{{ region }}"
        state: absent
      with_items:
        - "{{ vpc_security_group_name_efs }}"
        - "{{ vpc_security_group_name_rds }}"
        - "{{ vpc_security_group_name_web }}"
      register: delelte_security_groups
      until: "delelte_security_groups is not failed"
      retries: 25
      delay: 10

    - name: Get information about the VPC
      amazon.aws.ec2_vpc_net_info:
        region: "{{ region }}"
        filters: 
          "tag:Name": "{{ vpc_name }}"
      register: the_vpc

    - name: Get information about the Route Table
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ region }}"
        filters: 
          "vpc-id": "{{ the_vpc.vpcs[0].id }}"
      register: the_route_tables
      when: the_vpc.vpcs | length > 0

    - name: Delete the Route Table
      amazon.aws.ec2_vpc_route_table:
        route_table_id: "{{ item.route_table_id }}"
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        region: "{{ region }}"
        lookup: id
        state: absent
      when: the_vpc.vpcs | length > 0 and item.associations[0].main != true
      with_items: "{{ the_route_tables.route_tables }}"

    - name: Delete the Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        region: "{{ region }}"
        state: absent
      when: the_vpc.vpcs | length > 0

    - name: Delete the Subnets
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ the_vpc.vpcs[0].id }}"
        cidr: "{{ item }}"
        region: "{{ region }}"
        state: absent
      with_items:
        - "{{ the_vpc.vpcs[0].cidr_block | ansible.utils.ipsubnet(27,0) }}"
        - "{{ the_vpc.vpcs[0].cidr_block | ansible.utils.ipsubnet(27,1) }}"
        - "{{ the_vpc.vpcs[0].cidr_block | ansible.utils.ipsubnet(27,2) }}"
        - "{{ the_vpc.vpcs[0].cidr_block | ansible.utils.ipsubnet(27,3) }}"
      when: the_vpc.vpcs | length > 0

    - name: Delete the VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ the_vpc.vpcs[0].cidr_block }}"
        region: "{{ region }}"
        state: absent
      when: the_vpc.vpcs | length > 0