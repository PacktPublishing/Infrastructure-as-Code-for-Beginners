---
# tasks file for roles/aws-network

- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ vpc_name }}"
    region: "{{ region }}"
    cidr_block: "{{ vpc.address_space }}"
    dns_hostnames: true
    dns_support: true
    state: present
  register: vpc

- name: get some information on the available zones
  amazon.aws.aws_az_info:
    region: "{{ region }}"
  register: zones

- name: Create Subnet Web01
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ vpc.vpc.cidr_block | ansible.utils.ipsubnet(27, 0) }}"
    az: "{{ zones.availability_zones[0].zone_name }}"
    region: "{{ region }}"
    tags:
      Name: "{{ vpc_subnet_web01_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: subnet_web01

- name: Create Subnet Web02
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ vpc.vpc.cidr_block | ansible.utils.ipsubnet(27, 1) }}"
    az: "{{ zones.availability_zones[1].zone_name }}"
    region: "{{ region }}"
    tags:
      Name: "{{ vpc_subnet_web02_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: subnet_web02

- name: Create Subnet RDS01
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ vpc.vpc.cidr_block | ansible.utils.ipsubnet(27, 2) }}"
    az: "{{ zones.availability_zones[2].zone_name }}"
    region: "{{ region }}"
    tags:
      Name: "{{ vpc_subnet_rds01_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: subnet_rds01

- name: Create Subnet RDS02
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ vpc.vpc.cidr_block | ansible.utils.ipsubnet(27, 3) }}"
    az: "{{ zones.availability_zones[3].zone_name }}"
    region: "{{ region }}"
    tags:
      Name: "{{ vpc_subnet_rds02_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: subnet_rds02

- name: Create Internet Gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    tags:
      Name: "{{ vpc_igw_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: igw

- name: Create Route Table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    subnets:
      - "{{ subnet_web01.subnet.id }}"
      - "{{ subnet_web02.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
      - dest: ::/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Name: "{{ vpc_route_table_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  loop:
    - "{{ subnet_web01 }}"
    - "{{ subnet_web02 }}"
  register: route_table

- name: Create the Web security group
  amazon.aws.ec2_security_group:
    name: "{{ vpc_security_group_name_web }}"
    description: "{{ dict.ansible_warning }}"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    rules:
      - proto: "tcp"
        from_port: "80"
        to_port: "80"
        cidr_ip: "0.0.0.0/0"
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "0.0.0.0/0"
    rules_egress:
      - proto: "all"
        from_port: "0"
        to_port: "0"
        cidr_ip: "0.0.0.0/0"
    tags:
      Name: "{{ vpc_security_group_name_web }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: security_group_web

- name: Create the RDS security group
  amazon.aws.ec2_security_group:
    name: "{{ vpc_security_group_name_rds }}"
    description: "{{ dict.ansible_warning }}"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    rules:
      - proto: "tcp"
        from_port: "3306"
        to_port: "3306"
        group_id: "{{ security_group_web.group_id }}"
    rules_egress:
      - proto: "all"
        from_port: "0"
        to_port: "0"
        cidr_ip: "0.0.0.0/0"
    tags:
      Name: "{{ vpc_security_group_name_rds }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: security_group_rds

- name: Create the EFS security group
  amazon.aws.ec2_security_group:
    name: "{{ vpc_security_group_name_efs }}"
    description: "{{ dict.ansible_warning }}"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    rules:
      - proto: "tcp"
        from_port: "2049"
        to_port: "2049"
        group_id: "{{ security_group_web.group_id }}"
    rules_egress:
      - proto: "all"
        from_port: "0"
        to_port: "0"
        cidr_ip: "0.0.0.0/0"
    tags:
      Name: "{{ vpc_security_group_name_efs }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: security_group_efs

- name: Create an ELB target group
  community.aws.elb_target_group:
    name: "{{ alb_target_group_name }}"
    protocol: "HTTP"
    port: "80"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    state: "present"
    modify_targets: false
    tags:
      Name: "{{ alb_target_group_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: alb_target_group

- name: Create an application load balancer
  amazon.aws.elb_application_lb:
    name: "{{ alb_name }}"
    subnets:
      - "{{ subnet_web01.subnet.id }}"
      - "{{ subnet_web02.subnet.id }}"
    listeners:
      - Protocol: "HTTP"
        Port: "80"
        DefaultActions:
          - Type: forward
            TargetGroupArn: "{{ alb_target_group.target_group_arn }}"
    security_groups:
      - "{{ security_group_web.group_id }}"
    scheme: internet-facing
    state: present
    region: "{{ region }}"
    tags:
      Name: "{{ alb_name }}"
      Description: "{{ dict.ansible_warning }}"
      Project: "{{ app.name }}"
      Environment: "{{ app.env }}"
      Deployed_by: "Ansible"
  register: alb
